{"version":3,"sources":["actions/index.js","reducers/index.js","components/Search/index.js","components/Rating/index.js","components/Movie/index.js","components/MovieList/index.js","App.js","serviceWorker.js","index.js"],"names":["rateMovie","id","rating","type","fetchMovies","searchString","pageNumber","dispatch","requestMovies","fetch","concat","then","response","json","fetchMovieDetails","requestMovieDetails","movieListState","movies","totalResults","currentPage","isLoadingMovies","error","rootReducer","combineReducers","movieList","state","arguments","length","undefined","action","console","log","Object","objectSpread","Response","toConsumableArray","Search","Error","movieDetails","defineProperty","isLoadingDetails","MRRating","imdbID","handleChange","debounce","e","target","value","_this","props","_this2","this","react_default","a","createElement","className","onChange","persist","placeholder","React","Component","connect","Rating","rate","_this$props","stars","_loop","i","push","Fragment","key","name","defaultChecked","htmlFor","title","onClick","ownProps","Movie","getDetails","movie","poster","onMouseOver","src","alt","Title","Year","Actors","imdbRating","components_Rating","MovieList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","nextPage","onscroll","map","index","components_Movie","Poster","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","App","es","components_Search","components_MovieList","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76eee473.chunk.js","sourcesContent":["export const REQUEST_MOVIES = \"REQUEST_MOVIES\";\nexport const REQUEST_MOVIE_DETAILS = \"REQUEST_MOVIE_DETAILS\";\nexport const RECEIVE_MOVIES = \"RECEIVE_MOVIES\";\nexport const RECEIVE_MOVIE_DETAILS = \"RECEIVE_MOVIE_DETAILS\";\nexport const RATE_MOVIE = \"RATE_MOVIE\";\nconst API_KEY = \"edd80908\";\n\nexport const requestMovies = (searchString) => ({\n    type: REQUEST_MOVIES,\n    searchString\n});\n\nexport const receiveMovies = (response) => ({\n    type: RECEIVE_MOVIES,\n    response\n});\n\nexport const requestMovieDetails = (id) => ({\n    type: REQUEST_MOVIE_DETAILS,\n    id\n});\n\nexport const receiveMovieDetails = (response) => ({\n    type: RECEIVE_MOVIE_DETAILS,\n    response\n});\n\nexport const rateMovie = (id, rating) => ({\n    type: RATE_MOVIE,\n    id,\n    rating\n});\n\nexport const fetchMovies = (searchString, pageNumber) => (dispatch) => {\n    dispatch(requestMovies(searchString))\n    return fetch(`https://www.omdbapi.com/?s=${searchString}&type=movie&page=${pageNumber}&apikey=${API_KEY}`)\n    .then(response => response.json())\n    .then(json => dispatch(receiveMovies(json)))\n}\n\nexport const fetchMovieDetails = (id) => (dispatch) => {\n    dispatch(requestMovieDetails(id))\n    return fetch(`https://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`)\n    .then(response => response.json())\n    .then(json => dispatch(receiveMovieDetails(json)))\n}","import { REQUEST_MOVIES, REQUEST_MOVIE_DETAILS, RECEIVE_MOVIES, RECEIVE_MOVIE_DETAILS, RATE_MOVIE } from '../actions';\nimport { combineReducers } from 'redux';\n\nlet movieListState = {\n    searchString: \"\",\n    movies: [],\n    totalResults: 0,\n    currentPage: 0,\n    isLoadingMovies: false,\n    error: \"\"\n}\n\nconst movieList = (state = movieListState, action) => {\n    switch(action.type) {\n        case REQUEST_MOVIES:\n            console.log(\"req\", action);\n            if(state.searchString !== action.searchString) {\n                return {\n                    ...state,\n                    isLoadingMovies: true,\n                    movies: [],\n                    searchString: action.searchString,\n                    currentPage: 0\n                }\n            }\n\n            return {\n                ...state,\n                isLoadingMovies: true,\n                searchString: action.searchString\n            }\n\n        case RECEIVE_MOVIES:    \n            if(action.response.Response === \"True\") {\n                return {\n                    ...state,\n                    totalResults: action.response.totalResults,\n                    isLoadingMovies: false,\n                    currentPage: ++state.currentPage,\n                    error: \"\",\n                    movies: [\n                        ...state.movies,\n                        ...action.response.Search\n                    ]\n                }\n            }\n\n            return {\n                ...state,\n                isLoadingMovies: false,\n                error: action.response.Error\n            }\n\n        default: \n            return state;\n    }\n}\n\nconst movieDetails = (state = {}, action) => {\n    switch(action.type) {\n        case REQUEST_MOVIE_DETAILS:\n            return {\n                ...state,\n                [action.id]: {\n                    isLoadingDetails: true, \n                    MRRating: 0\n                }\n            }\n        case RECEIVE_MOVIE_DETAILS:\n            return {\n                ...state,\n                [action.response.imdbID] : {\n                    ...state[action.response.imdbID],\n                    ...action.response,\n                    isLoadingDetails: false,\n                }\n            }\n        case RATE_MOVIE:\n            return {\n                ...state,\n                [action.id]: {\n                    ...state[action.id],\n                    MRRating: action.rating\n                }\n            }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({movieList, movieDetails})\n\nexport default rootReducer;\n\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../../actions';\nimport './search.scss';\n\nclass Search extends React.Component {\n    handleChange = debounce((e) => {\n        if(e.target.value) {\n            this.props.dispatch(fetchMovies(e.target.value, 1));\n        }\n    }, 250);\n\n    render() {\n        return (\n            <div className=\"container search\">\n                <input className=\"search-input\" type=\"text\" onChange={(e) => {e.persist();this.handleChange(e)}} placeholder=\"Searh a movie\"></input>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Search);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { rateMovie } from '../../actions';\nimport './rating.scss';\n\nclass Rating extends React.Component {\n    rate = (rating) => {\n        this.props.dispatch(rateMovie(this.props.id, rating));\n    }\n\n    render() {\n        let { rating, id } = this.props;\n        let stars = [];\n\n        for(let i=5; i>0; i--) {\n            stars.push(\n                <>\n                    <input key={i} type=\"radio\" id={\"star\" + i} name=\"rate\" value={i} defaultChecked={rating <= i && rating > 0}/>\n                    <label key={\"label\" + i} htmlFor={\"star\" + i} title=\"text\" onClick={() => {this.rate(i)}} className={rating >= i && rating > 0 ? \"star checked\" : \"star\"}></label>\n                </>\n            )\n        }\n        return (\n            <div>\n                <div className=\"rate\">\n                    {\n                        stars\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    rating: state.movieDetails[ownProps.id].MRRating\n})\n\nexport default connect(mapStateToProps)(Rating);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovieDetails } from '../../actions';\nimport Rating from '../Rating';\nimport './movie.scss';\nclass Movie extends React.Component {\n    getDetails = (id) => {\n        if(!this.props.movie) {\n            this.props.dispatch(fetchMovieDetails(id))\n        }\n    }\n\n    render() {\n        let { poster, id, movie } = this.props;\n        \n        let dummy = \"https://placeimg.com/300/447/any\"\n        return (\n            <div className=\"movie\">\n                <div className=\"movie-poster\" onMouseOver={() => { this.getDetails(id) }}>\n                    <img src={poster === \"N/A\" ? dummy : poster} alt={id}></img>\n                </div>\n                {\n                    movie && !movie.isLoadingDetails &&\n                    <div className=\"movie-details\">\n                        <div className=\"movie-details-title\">{movie.Title}</div>\n                        <div className=\"movie-details-year\">{movie.Year}</div>\n                        <div className=\"movie-details-cast\">{movie.Actors}</div>\n                        <div className=\"movie-details-imdb_rating\">IMDB : {movie.imdbRating}</div>\n                        <div className=\"movie-details-rating\">\n                            <Rating id={id}></Rating>\n                        </div>\n                    </div>\n                }\n                {\n                    movie && movie.isLoadingDetails && \n                    <div className=\"movie-loader\">\n                        <span><i className=\"fa fa-spinner fa-spin loader\"></i></span>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    movie: state.movieDetails[ownProps.id]\n})\nexport default connect(mapStateToProps)(Movie);","import React from 'react';\nimport { connect } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport Movie from '../Movie';\nimport { fetchMovies } from '../../actions';\nimport './movie-list.scss';\n\nclass MovieList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.currentPage = 1;\n\n        window.onscroll = this.handleScroll;\n    }\n\n    handleScroll = debounce(() => {\n        console.log(\"onscroll\");\n        if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight\n            && this.props.movies.length !== +this.props.totalResults) {\n                console.log(\"onscroll inside\");\n                let nextPage = this.props.currentPage + 1;\n                this.props.dispatch(fetchMovies(this.props.searchString, nextPage));\n        }\n    }, 250)\n\n    render() {\n        let { movies, error, totalResults, isLoadingMovies } = this.props;\n        console.log(isLoadingMovies);\n        return (\n            <div className=\"movie-list\">\n                {\n                    movies.map((movie, index) => {\n                        return <Movie key={index} poster={movie.Poster} id={movie.imdbID}></Movie>\n                    })\n                }\n                {\n                    error && \n                    <div className=\"message\">{error}</div>\n                }\n                {\n                    movies.length > 0 && movies.length === +totalResults &&\n                    <div className=\"message\">Thats all we have!</div>\n                }\n                {\n                    isLoadingMovies && \n                    <div className=\"message\">Loading...</div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    searchString: state.movieList.searchString,\n    movies: state.movieList.movies,\n    totalResults: state.movieList.totalResults,\n    error: state.movieList.error,\n    isLoadingMovies: state.movieList.isLoadingMovies,\n    currentPage: state.movieList.currentPage\n})\n\nexport default connect(mapStateToProps)(MovieList);","import React from 'react';\nimport './app.scss';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport Search from './components/Search';\nimport MovieList from './components/MovieList';\nimport './styles/common.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Search></Search>\n        <MovieList></MovieList>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}